<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://vuepress-theme-hope-v1.netlify.app/pwa/zh/</id>
  <title>PWA 支持</title>
  <subtitle>一个强大的 PWA 插件</subtitle>
  <author>
    <name>Mr.Hope</name>
  </author>
  <updated>2022-06-06T17:22:59.667Z</updated>
  <generator>vuepress-plugin-feed1</generator>
  <link rel="self" href="https://vuepress-theme-hope-v1.netlify.app/pwa/atom.xml"/>
  <link rel="alternate" href="https://vuepress-theme-hope-v1.netlify.app/pwa/zh/"/>
  <rights>MIT Licensed | Copyright © 2019-present Mr.Hope</rights>
  <contributor>
    <name>Mr.Hope</name>
  </contributor>
  <entry>
    <title type="html">配置</title>
    <id>https://vuepress-theme-hope-v1.netlify.app/pwa/zh/config.html</id>
    <link href="https://vuepress-theme-hope-v1.netlify.app/pwa/zh/config.html"/>
    <updated>2022-06-02T17:21:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="showinstall"> showInstall</h2>
<ul>
<li>类型: <code>boolean</code></li>
<li>默认值: <code>true</code></li>
</ul>
<p>是否在 Service Worker 首次成功注册时显示 PWA 安装按钮</p>
<h2 id="manifest"> manifest</h2>
<ul>
<li>类型: <code>ManifestOption</code></li>
<li>必填: 否</li>
</ul>
<p>填充一个将被解析为 manifest.webmanifest 的对象。</p>
<div><p>Tips</p>
<p>如果未设置某些选项，它们会回退到插件预设值。</p>
<ul>
<li>
<p>name: <code>siteConfig.title</code> || <code>siteConfig.locales['/'].title</code> || <code>&quot;Site&quot;</code></p>
</li>
<li>
<p>short_name: <code>siteConfig.title</code> || <code>siteConfig.locales['/'].title</code> || <code>&quot;Site&quot;</code></p>
</li>
<li>
<p>description: <code>siteConfig.description</code> || <code>siteConfig.locales['/'].description</code> || <code>&quot;A site built with vuepress&quot;</code></p>
</li>
<li>
<p>lang: <code>siteConfig.locales['/'].lang</code> || <code>&quot;en-US&quot;</code></p>
</li>
<li>
<p>start_url: <code>context.base</code></p>
</li>
<li>
<p>scope: <code>context.base</code></p>
</li>
<li>
<p>display: <code>&quot;standalone&quot;</code></p>
</li>
<li>
<p>theme_color: <code>&quot;#46bd87&quot;</code></p>
</li>
<li>
<p>background_color: <code>&quot;#ffffff&quot;</code></p>
</li>
<li>
<p>orientation: <code>&quot;portrait-primary&quot;</code></p>
</li>
<li>
<p>prefer_related_applications: <code>false</code></p>
</li>
</ul>
</div>
<div><p>更多</p>
<p>更多内容，请详见 <a href="https://w3c.github.io/manifest/" target="_blank" rel="noopener noreferrer">W3C Manifest<i>Content not supported</i></a></p>
</div>
<h2 id="favicon"> favicon</h2>
<ul>
<li>类型: <code>string</code></li>
<li>必填: 否</li>
</ul>
<p><code>favicon.ico</code> 地址，填入绝对路径。</p>
<div><p>Note</p>
<p>我们建议你为你的站点生成 favicon</p>
</div>
<h2 id="themecolor"> themeColor</h2>
<ul>
<li>类型: <code>string</code></li>
<li>默认值: <code>&quot;#46bd87&quot;</code></li>
</ul>
<p>主题色，默认为主题绿</p>
<h2 id="maxsize"> maxSize</h2>
<ul>
<li>类型: <code>number</code></li>
<li>默认值: <code>2048</code></li>
</ul>
<p>允许缓存的最大大小 (以 KB 为单位)</p>
<div><p>Note</p>
<p>此选项具有最高优先级，任何超过此值的文件都会被排除。</p>
<p>所以你如果生成了很大的 HTML 或 JS 文件，请考虑调高此值，否则你的 PWA 可能无法在离线模式下正常运行。</p>
</div>
<h2 id="cachehtml"> cacheHTML</h2>
<ul>
<li>类型: <code>boolean</code></li>
<li>默认值: <code>false</code></li>
</ul>
<p>是否缓存主页和 404 错误页之外的 HTML 文件</p>
<h2 id="cachepic"> cachePic</h2>
<ul>
<li>类型: <code>boolean</code></li>
<li>默认值: <code>false</code></li>
</ul>
<p>是否缓存图片。</p>
<h2 id="maxpicsize"> maxPicSize</h2>
<ul>
<li>类型: <code>number</code></li>
<li>默认值: <code>1024</code></li>
</ul>
<p>图片允许缓存的最大大小 (以 KB 为单位)</p>
<div><p>Tips</p>
<p>该选项不能大于 <code>maxSize</code>。</p>
</div>
<h2 id="update"> update</h2>
<ul>
<li>类型: <code>&quot;disabled&quot; | &quot;available&quot; | &quot;hint&quot; | &quot;force&quot;</code></li>
<li>默认值: <code>&quot;available&quot;</code></li>
</ul>
<p>发现新内容时的控制逻辑。</p>
<ul>
<li>
<p><code>&quot;disabled&quot;</code>: 即使有新的 service worker 也不做任何事情，新的 service work 开始等待后，会在用户下次访问时接管页面，让用户获得新内容。</p>
</li>
<li>
<p><code>&quot;available&quot;</code>: 仅当新的 service worker 可用时才显示更新弹出窗口</p>
</li>
<li>
<p><code>&quot;hint&quot;</code>: 显示更新内容可用提示，并允许用户立即刷新。当新的 SW 成功注册后，将转为更新内容就绪弹窗。</p>
<p>当你希望用户立即查看新文档时，这很有帮助。</p>
<div><p>Note</p>
<p>如果用户在新 SW 就绪前选择刷新，当前的 Service Worker 将被注销，并且请求将开始向 Web 发出。新的 service worker 将开始安装并在安装后接管页面。</p>
</div>
</li>
<li>
<p><code>&quot;force&quot;</code>: 立即注销当前 Service Worker 然后刷新以获取新内容</p>
<div><p>Warning</p>
<p>虽然这可以确保用户访问的是最新内容，但这可能会影响访问体验。</p>
</div>
</li>
</ul>
<div><p>Note</p>
<p>文档的更新方式由以前的版本控制，因此当前选项仅影响此版本的下一次更新。</p>
</div>
<h2 id="apple"> apple</h2>
<p>针对苹果的特殊设置</p>
<blockquote>
<p>如果你不想进行精细的设置，可以忽略它；如果你不想兼容 Apple 上的 Safari，请设置为 <code>false</code>。</p>
</blockquote>
<h3 id="apple-icon"> apple.icon</h3>
<ul>
<li>类型: <code>string</code></li>
<li>必填: 否</li>
</ul>
<p>填入苹果使用的图标地址，推荐 152×152 大小</p>
<h3 id="apple-statusbarcolor"> apple.statusBarColor</h3>
<ul>
<li>类型: <code>&quot;black&quot; | &quot;white&quot;</code></li>
<li>默认: <code>&quot;black&quot;</code></li>
</ul>
<p>苹果的状态栏颜色</p>
<h3 id="apple-maskicon"> apple.maskIcon</h3>
<ul>
<li>类型: <code>string</code></li>
<li>必填: 否</li>
</ul>
<p>Safari 图标</p>
<h2 id="mstile"> msTile</h2>
<p>针对微软磁贴的特殊设置</p>
<blockquote>
<p>如果你不想进行精细的设置，可以忽略它；如果你不想兼容 windows，请设置为 <code>false</code>。</p>
</blockquote>
<h3 id="mstile-image"> msTile.image</h3>
<ul>
<li>类型: <code>string</code></li>
<li>必填: 否</li>
</ul>
<p>磁贴图标</p>
<h3 id="mstile-color"> msTile.color</h3>
<ul>
<li>类型: <code>string</code></li>
<li>默认值: <code>themeColor</code></li>
</ul>
<p>磁贴颜色，缺省会自动回退到主题色。</p>
<h2 id="hintcomponent"> hintComponent</h2>
<ul>
<li>类型: <code>string</code></li>
<li>默认值: <code>&quot;SWHintPopup&quot;</code></li>
</ul>
<p>可填入自定义的提示弹窗组件路径。</p>
<h2 id="updatecomponent"> updateComponent</h2>
<ul>
<li>类型: <code>string</code></li>
<li>默认值: <code>&quot;SWUpdatePopup&quot;</code></li>
</ul>
<p>可填入自定义的更新弹窗组件路径。</p>
<h2 id="appendbase"> appendBase</h2>
<ul>
<li>类型: <code>boolean</code></li>
<li>默认值: <code>false</code></li>
</ul>
<p>是否为所有绝对链接添加 base。</p>
<h2 id="generateswconfig"> generateSwConfig</h2>
<p>传递给 <code>workbox-build</code> 的选项，具体详情，请见 <a href="https://developers.google.com/web/tools/workbox/reference-docs/latest/module-workbox-build#.generateSW" target="_blank" rel="noopener noreferrer">Workbox 文档<i>Content not supported</i></a></p>
<h2 id="locales"> locales</h2>
<ul>
<li>
<p>类型: <code>PWALocaleConfig</code></p>
<div><pre><code><span>interface</span> <span>PWALocaleData</span> <span>{</span>
  <span>/**
   * 安装按钮文字
   */</span>
  install<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * iOS 安装文字
   */</span>
  iOSInstall<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 取消按钮文字
   */</span>
  cancel<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 关闭按钮文字
   */</span>
  close<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 上一张图片文字
   */</span>
  prevImage<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 下一张图片文字
   */</span>
  nextImage<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 安装解释
   */</span>
  explain<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 描述标签文字
   */</span>
  desc<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 特性标签文字
   */</span>
  feature<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 更新内容提示文字
   */</span>
  hint<span>:</span> <span>string</span><span>;</span>

  <span>/**
   * 更新内容可用文字
   */</span>
  update<span>:</span> <span>string</span><span>;</span>
<span>}</span>

<span>interface</span> <span>PWALocaleConfig</span> <span>{</span>
  <span>[</span>localePath<span>:</span> <span>string</span><span>]</span><span>:</span> PWALocaleData<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br></div></div></li>
<li>
<p>必填: 否</p>
</li>
</ul>
<p>PWA 插件的国际化配置。</p>
]]></content>
    <author>
      <name>Mr.Hope</name>
    </author>
    <contributor>
      <name>Mr.Hope</name>
    </contributor>
    <published>2020-10-22T04:23:17.000Z</published>
    <rights>Copyright by Mr.Hope</rights>
  </entry>
  <entry>
    <title type="html">指南</title>
    <id>https://vuepress-theme-hope-v1.netlify.app/pwa/zh/guide.html</id>
    <link href="https://vuepress-theme-hope-v1.netlify.app/pwa/zh/guide.html"/>
    <updated>2022-06-02T17:21:23.000Z</updated>
    <summary type="html"><![CDATA[<p>插件为 VuePress 带来了增强的 PWA 支持[^pwa-intro]。</p>
]]></summary>
    <content type="html"><![CDATA[<p>插件为 VuePress 带来了增强的 PWA 支持<sup></sup>。</p>

<h2 id="介绍"> 介绍</h2>
<p>Service Worker <sup></sup> (简称 SW) 主要用于获取并托管网站内容。</p>
<p>本插件会自动通过 <code>workbox-build</code> 注册 Service Worker。为了更好地控制 Service Worker 可以预缓存的内容，插件提供了下列设置。</p>
<div><p>Tips</p>
<p>如果你是一个高级用户，你可以直接设置 <code>generateSwConfig</code> 来将选项传递给 <code>workbox-build</code>。</p>
</div>
<h2 id="缓存控制"> 缓存控制</h2>
<p>基于可安装性<sup></sup>的要求，插件提供了缓存控制的相关选项。</p>
<h3 id="默认缓存"> 默认缓存</h3>
<p>默认情况下插件会预缓存所有的 JS、CSS 和 SVG 文件，但仅缓存主页和 404 页面的 HTML。</p>
<p>同时插件还会缓存字体文件: <code>**/*.{woff,woff2,eot,ttf,otf}</code>。</p>
<h3 id="图片缓存"> 图片缓存</h3>
<p>你可以通过设置 <code>cachePic</code> 选项为 <code>true</code> 来缓存站点图片。</p>
<p>如果你的站点体积不大，且配图大多为关键性说明，希望可以在离线模式下显示，建议将此项设置为 <code>true</code>。</p>
<div><p>图片识别</p>
<p>我们通过文件后缀名识别图片，任何以 <code>.png</code>, <code>.jpg</code>, <code>.jpeg</code> , <code>.gif</code>, <code>.bmp</code>, <code>.webp</code> 结尾的文件都会视为图片。</p>
</div>
<h3 id="html-缓存"> HTML 缓存</h3>
<p>当你网站体积不大，并且希望文档完全离线可用时，你可以通过设置 <code>cacheHTML</code> 为 <code>true</code> 来缓存所有 HTML 页面。</p>
<div><p>为什么默认不缓存非主页和 404 页面</p>
<p>虽然说 VuePress 为所有的页面通过 SSR<sup></sup> 生成了 HTML 文件，但是这些文件主要用于 SEO<sup></sup>，并能够让你在后端不做 SPA<sup></sup> 配置的情况下能够直接访问任何链接。</p>
<p>VuePress 本质上是一个 SPA。这意味着你只需要缓存主页并从主页进入即可正常访问所有页面。所以默认不缓存其他 HTML 能够有效减小缓存大小 (可以缩减大约 40% 的体积)，加快 SW 更新速度。</p>
<p>但是这样做也有缺点，如果用户直接从非主页进入网站，首个页面的 HTML 文件仍需要从互联网加载。同时离线环境下，用户只能通过主页进入再自行导航到对应页面，直接访问某个链接会出现无法访问的提示。</p>
</div>
<h3 id="大小控制"> 大小控制</h3>
<p>为了防止在预缓存列表中包含大文件，任何大于 2MB 的文件或大于 1MB 的图片都将被删除。</p>
<p>你可以通过 <code>maxSize</code> 选项自定义缓存的最大文件大小 (单位 KB)，或通过 <code>maxPicSize</code> 来更改图片的大小限制 (单位: KB)。</p>
<h2 id="更新控制"> 更新控制</h2>
<p>我们提供 <code>update</code> 选项控制用户如何接收更新。</p>
<p><code>update</code> 选项的默认值是 <code>&quot;available&quot;</code>，这意味着当网站内容更新后，新的 SW 会在后台静默安装，并在安装结束后弹窗提示用户新内容就绪。用户可以自主选择是否立即刷新查看新内容。</p>
<p>由于默认行为下，用户访问途中在 SW 就绪前都会阅读旧版本文档并且得不到相关提示。如果你的文档仍在建设期，希望尽早提示用户他可能在阅读已过时的内容，你可以将其设置为 <code>&quot;hint&quot;</code>。这样用户在进入文档后数秒内就可以收到新内容已发布的提示。但这样做的负面效果是如果用户在新 SW 就绪前选择更新，那么他将在新 SW 安装并接管页面前，需要从互联网获取页面的全部资源。</p>
<p>如果你的文档很稳定，或者你在托管博客，不太关心用户立即接收到最新版本，你可以将其设置为 <code>&quot;disabled&quot;</code>，这意味着新的 SW 将在后台完全静默安装并在安装后等待，当旧版本 SW 控制的页面全部关闭后，用户下一次访问时，新 SW 将开始接管并提供用户新内容。此设置可以避免用户在访问途中被右下角的弹窗所打扰。</p>
<p>如果你希望通过 SW 来加速用户在弱网或无网条件下的访问，但同时希望用户时刻访问新内容，你可以将此选项设置为 <code>&quot;force&quot;</code>。此选项的行为是在检测到新 SW 后立即注销旧 SW 并刷新页面以确保用户浏览最新内容。但我们强烈推荐除非必要不适用此选项，因为这会导致新 SW 发布后，用户在进入网站后的几秒内会遇到预期之外的突然刷新，并且他们将必须通过互联网访问文档并完全重新安装最新的 SW。</p>
<h3 id="更新提示弹窗"> 更新提示弹窗</h3>
<p>当检测到新内容 (检测到新的 SW) 时， 更新提示弹窗将会在右下角显示，并允许用户刷新并应用。</p>
<div><p>自定义弹窗</p>
<p>如果你对默认的弹窗不满意，你可以自行编写组件更换。你需要全局注册自己的弹窗组件，并将组件的名称传递给 <code>hintComponent</code> 选项。</p>
</div>
<h3 id="更新就绪弹窗"> 更新就绪弹窗</h3>
<p>当新内容就绪 (新的 SW 安装成功并开始等待) 后，更新就绪弹窗将会在右下角显示，并允许用户刷新并应用。</p>
<div><p>自定义弹窗</p>
<p>如果你对默认的弹窗不满意，你可以自行编写组件更换。你需要全局注册自己的弹窗组件，并将组件的名称传递给 <code>updateComponent</code> 选项。</p>
</div>
<h2 id="清单文件生成"> 清单文件生成</h2>
<p>为了保证 PWA 的可安装性，网站需要生成清单文件，并通过 <code>&lt;link&gt;</code> 声明有效的 manifest 清单文件地址<sup></sup>。</p>
<p>插件会在输出目录自动为你生成 Manifest 文件 <code>manifest.webmanifest</code>，同时还会添加清单地址声明到每一个 HTML 的 <code>&lt;head&gt;</code> 中。</p>
<p>如果你在 <code>.vuepress/public</code> 中已有一个 <code>manifest.webmanifest</code> 或 <code>manifest.json</code>，该插件将读取它并合并到最终 manifest 中。</p>
<h3 id="自动生成"> 自动生成</h3>
<p>插件会尽可能的通过 VuePress 插件接口的信息，为 manifest 的大部分设置项设置 fallback，这意味着即使你无需设置 manifest 的大多数内容。</p>
<p>如果未设置下列选项，它们会按照顺序依次尝试回退到以下预设值。</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td><code>siteConfig.title</code> || <code>siteConfig.locales['/'].title</code> || <code>&quot;Site&quot;</code></td>
</tr>
<tr>
<td>short_name</td>
<td><code>siteConfig.title</code> || <code>siteConfig.locales['/'].title</code> || <code>&quot;Site&quot;</code></td>
</tr>
<tr>
<td>description</td>
<td><code>siteConfig.description</code> || <code>siteConfig.locales['/'].description</code> || <code>&quot;A site built with vuepress&quot;</code></td>
</tr>
<tr>
<td>lang</td>
<td><code>siteConfig.locales['/'].lang</code> || <code>&quot;en-US&quot;</code></td>
</tr>
<tr>
<td>start_url</td>
<td><code>siteConfig.base</code></td>
</tr>
<tr>
<td>scope</td>
<td><code>siteConfig.base</code></td>
</tr>
<tr>
<td>display</td>
<td><code>&quot;standalone&quot;</code></td>
</tr>
<tr>
<td>theme_color</td>
<td><code>&quot;#46bd87&quot;</code></td>
</tr>
<tr>
<td>background_color</td>
<td><code>&quot;#ffffff&quot;</code></td>
</tr>
<tr>
<td>orientation</td>
<td><code>&quot;portrait-primary&quot;</code></td>
</tr>
<tr>
<td>prefer_related_applications</td>
<td><code>false</code></td>
</tr>
</tbody>
</table>
<p>完整的配置项详见 <a href="https://github.com/vuepress-theme-hope/vuepress-theme-hope/blob/main/packages/pwa2/src/shared/manifest.ts" target="_blank" rel="noopener noreferrer">Manifest 类型定义文件<i>Content not supported</i></a>。</p>
<h3 id="手动配置"> 手动配置</h3>
<p>你可以在 <code>manifest</code> 选项中手动指定 manifest 的各项内容。</p>
<div><p>优先级</p>
<p><code>manifest</code> 选项的设置具有最高的优先级，之后是 <code>public</code> 文件夹下可能存在的 manifest 文件。</p>
</div>
<p><strong>你至少应该通过 <code>manifest.icons</code> 或 PWA 插件中的其他选项设置一个有效的图标。</strong> 因为这是我们没法默认生成的。</p>
<div><p>Note</p>
<p>可安装性<sup></sup>规范要求 manifest 中至少声明一个有效的图标。</p>
<p>所以如果你不配置 <code>manifest.icons</code>，访问者只能享受到 Service Worker 缓存带来的离线可访问性，而并不能作为 PWA 进行安装。</p>
<p>此外，该插件默认不处理清单中的任何内容，而是按原样输出。 这意味着，如果你计划部署到子目录，则应自行将 URL 前缀附加到自己的清单 Urls 中。</p>
<p>但是，如果你需要的所有东西都在 base 文件夹下，你可以在插件选项中设置 <code>appendBase: true</code> 让插件将 <code>base</code> 自动附加到任何地址。</p>
</div>
<h2 id="其他选项"> 其他选项</h2>
<p>插件还提供了其他 PWA 相关选项，比如微软磁贴图标与颜色设置，苹果图标等。</p>
<p>你可以酌情根据需要设置它们。详细的选项请见 <a href="./config.html">配置页</a>。</p>
<h2 id="相关阅读"> 相关阅读</h2>
<p>更多内容，请详见:</p>
<ul>
<li><a href="https://web.dev/progressive-web-apps/" target="_blank" rel="noopener noreferrer">Google PWA<i>Content not supported</i></a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Progressive_web_apps" target="_blank" rel="noopener noreferrer">MDN PWA<i>Content not supported</i></a></li>
<li><a href="https://w3c.github.io/manifest/" target="_blank" rel="noopener noreferrer">W3C Manifest 规范<i>Content not supported</i></a></li>
</ul>
<hr>
<section>
<ol>
<li id="footnote1"><p><strong>PWA 介绍</strong></p>
<p>PWA 全称 Progressive Web app，即渐进式网络应用程序，标准由 W3C 规定。</p>
<p>它允许网站通过支持该特性的浏览器将网站作为 App 安装在对应平台上。 </p>
</li>
<li id="footnote2"><p><strong>Service Worker 简要介绍</strong></p>
<ol>
<li>
<p>Service Worker 会在注册过程中获取注册在其中的所有文件并缓存它们。</p>
</li>
<li>
<p>注册成功后，Service Worker 激活，并开始代理并控制你的全部请求。</p>
</li>
<li>
<p>每当你想要通过浏览器发起访问请求后，Service Worker 将会查看其是否存在与自身缓存列表中，若存在则直接返回缓存好的结果，否则调用自身的 fetch 方法进行获取。你可以通过自定义 fetch 方法，来完全控制网页内资源获取请求的结果，比如在离线时提供一个 fallback 的网页。</p>
</li>
<li>
<p>每次用户重新打开网站时，Service Worker 会向自身注册时的地址发出校验命令，如果检测到新版本的 Service Worker，则会更新自身，并开始缓存注册在新 Service Worker 中的资源列表。成功获取内容更新后，Service Worker 将会触发 <code>update</code> 事件。可以通过此事件提示用户，比如将在右下角显示一个弹出窗口，提示用户新内容可用并允许用户触发更新。</p>
</li>
</ol>
 </li>
<li id="footnote3"><p><strong>可安装性</strong></p>
<p>想要让网站可以注册为 PWA，网站需要自行成功注册有效的 Service Worker，同时添加合法的 manifest 清单文件并在网站中声明它。</p>
<p>各平台或浏览器对 Service Worker 缓存的大小有要求，当 Service Worker 缓存的文件体积过大后，该网站将会被标记为不可安装。对于 Safari 这个阈值是 50 MB，少数浏览器会设置更少或更多的值 (30MB, 70MB, 80MB)，最大的 Chrome 也将阈值标识在 100 MB。</p>
<p>另外，清单文件应至少包含 <code>name</code>(或 <code>short_name</code>) <code>icons</code> <code>start_url</code>。</p>
<div><p>Note</p>
<p>从 Chrome 93 起 Service Worker 必须含有有效的控制离线请求的 fetch 事件，才符合可安装性标准。</p>
<p>但是插件目前并没有默认包含相关处理逻辑，所以在 Chrome 93 或更高版本的安卓设备上，网站不会弹出安装提示。</p>
</div>
  </li>
<li id="footnote4"><p><strong>SSR</strong>: <strong>S</strong>erver <strong>S</strong>ide <strong>R</strong>endering，服务端渲染 </p>
</li>
<li id="footnote5"><p><strong>SEO</strong>: <strong>S</strong>earch <strong>E</strong>ngine <strong>O</strong>ptimization，搜索引擎增强，</p>
<p>详见 <a href="https://mrhope.site/code/website/html/definition/seo.html" target="_blank" rel="noopener noreferrer">SEO 介绍<i>Content not supported</i></a> </p>
</li>
<li id="footnote6"><p><strong>SPA</strong>: <strong>S</strong>ingle <strong>P</strong>age <strong>A</strong>pplication, 单页应用</p>
<p>大多只有主页，并使用 history mode 处理路由，而不是真的在页面之间导航。 </p>
</li>
<li id="footnote7"><p><strong>清单文件</strong></p>
<p>清单文件使用 JSON 格式，负责声明 PWA 各项信息，如名称、描述、图标、快捷动作等。</p>
<p>为了使你的站点能够被注册为 PWA，你需要满足 manifest 基本的规范，才能使浏览器认为该网站为一个可安装的 PWA 并允许用户安装它。</p>
<div><p>Info</p>
<p>Manifest 的标准与规范，请详见 <a href="https://w3c.github.io/manifest/" target="_blank" rel="noopener noreferrer">W3C Manifest<i>Content not supported</i></a></p>
</div>
 </li>
</ol>
</section>
]]></content>
    <author>
      <name>Mr.Hope</name>
    </author>
    <contributor>
      <name>Mr.Hope</name>
    </contributor>
    <published>2020-10-22T04:23:17.000Z</published>
    <rights>Copyright by Mr.Hope</rights>
  </entry>
</feed>